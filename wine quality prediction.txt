import numpy as npimport matplotlib.pyplot as plt import pandas as pdimport seaborn as snsfrom warnings import filterwarningsfilterwarnings(action='ignore')data = pd.read_csv("winequality-red.csv")data.head()data.groupby('quality').mean()print(data.isna().sum())data.corr()sns.countplot(data['quality'])plt.show()sns.countplot(data['pH'])plt.show()sns.countplot(data['alcohol'])plt.show()sns.countplot(data['fixed acidity'])plt.show()sns.countplot(data['volatile acidity'])plt.show()sns.countplot(data['citric acid'])plt.show()sns.countplot(data['density'])plt.show()data.hist(figsize=(10,10),bins=50)plt.show()data.hist(figsize=(10,10),bins=50)plt.show()data['goodquality'] = [1 if x >= 7 else 0 for x in data['quality']]X = data.drop(['quality','goodquality'], axis = 1)Y = data['goodquality']print(X)print(Y)from sklearn.model_selection import train_test_splitX_train,X_test,Y_train,Y_test = train_test_split(X,Y,test_size=0.25,random_state=0.2)from sklearn.linear_model import LogisticRegressionmodel = LogisticRegression()model.fit(X_train,Y_train)Y_pred = model.predict(X_test)from sklearn.metrics import accuracy_score,confusion_matrixprint("Logistic")print("Accuracy Score:",accuracy_score(Y_test,Y_pred))cm1 = confusion_matrix(Y_test,Y_pred)print("confusion matrix:",cm1)from sklearn.naive_bayes import GaussianNBmodel2 = GaussianNB()model2.fit(X_train,Y_train)y_pred2 = model2.predict(X_test)from sklearn.metrics import accuracy_score,confusion_matrixprint("Accuracy Score:",accuracy_score(Y_test,y_pred2))cm2 = confusion_matrix(Y_test,Y_pred)print("confusion matrix:",cm2)